syntax = "proto3";

option csharp_namespace = "ChatService.Protos";

package services;

service Chat{
  // bi-directional streaming for users to have realtime chat with each other
  rpc EventStream (stream Event) returns (stream Event);
  // get the messages that are unread.
  rpc GetUnreadMessages (NewMessagesRequest) returns (NewMessagesResponse);
  rpc GetAllMessages (AllMessagesRequest) returns (AllMessagesResponse);
  rpc GetGroupInfo (GetGroupsRequest) returns (GroupInfo);
}
// gRPC stream that gives all message requests when sent.
message UserEventsRequest{
  string userid = 1;
}
enum EventType{
  MESSAGE_RECEIVED = 0;
  GROUP_CREATED = 1;
  CONTACT_JOINED = 2;
}
message UserEventsResponse{
  EventType eventType = 1;
  Message message = 2;
  uint32 groupId = 3;
}
// get all the new messages, useful on start of application
message NewMessagesRequest{
  string userid = 1;
}
message NewMessagesResponse{
  repeated Message message = 1;
}
// get ALL the user's messages, useful when app is first installed
message AllMessagesRequest{
  string userid = 1;
}
message AllMessagesResponse{
  repeated Message message = 1;
}
message Event{
  Message message = 1;
  GroupCreated groupCreated = 2;
  SenderInfo senderInfo = 3;
  MessageRead messageRead = 4;
}
message MessageRead{
  string messageId = 1;
  uint32 messageStatus =2;
}
message GetGroupsRequest{
  string groupId = 1;
}
message GroupInfo{
  string groupId = 1;
  string title = 2;
  repeated string groupMemberIds = 3;
  Media groupImage = 4;
}
message SenderInfo{
  // the dude who sent the message
  string userid = 1;
  bool isInit =2;
}
message Message{
  string id = 1;
  // id of the user that recieves the message, null if group
  string receiverUserId = 2;
  // will be non null if the message is a reply.
  string replyId = 4;
  // will be non null if is a media, use this to check the type of media as well.
  Media media = 5;
  // if the message is a forwarded message
  bool isForward = 6;
  // 0 = Sent, 1 = Received, 2 = Read 
  uint32 messageStatus = 7;
  int64 datePostedUnixTimestamp = 8;
  // id of the group, null if sent to user
  string groupId = 9;
  // message, if null, contact joined
  string message = 10;
}
message Media{
  string mimeType = 1;
  string mediaUrl = 2;
  uint64 sizeBytes = 3;
}
message GroupCreated{
  repeated string groupMemberIds = 1;
  // the guy who created the group will be the first admin
  string groupCreator = 2;
  string title = 3;
  // the time of the message
  int64 dateCreatedUnix = 4;
}
