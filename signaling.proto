syntax = "proto3";

option csharp_namespace = "SignalingService.Protos";

package services;

service Signaling{
    // stream for call offers and answers
    rpc CallStream (stream Signal) returns (stream Signal);
}
// Contract message for multiple signals, the rest are null when not used
message Signal{
    // signal offer from caller
    SignalOffer signalOffer = 1;
    // answer from callee
    SignalAnswer signalAnswer = 2;
    // ICE exchange from caller
    ICECandidate ICECandidateRequest = 3;
    // ICE exchange from callee
    ICECandidate ICECandidateResponse = 4;
    // receiver user id for easy identification on the backend
    string recieverId = 5;
    // information of the listener host
    SenderData senderInfo = 6;
    Leave leave = 7;
}
// sender's message information
message SenderData{
    // the dude who sent the message, leave the id so the client can query for his information
    string userid = 1;
    bool isInit =2;
}
// Signal sent from caller to callee
message SignalOffer{
    string type = 1;
    string name = 2;
    // sdp format, we should not touch this on the server
    string offer = 3;
}
// signal response sent from callee to caller
message SignalAnswer{
    string type = 1;
    string name = 2;
    // sdp format, we should not touch this on the server
    string answer = 3;
}
// for exchanging Interactive Connectivity Establishment Information
message ICECandidate{
    // is always "new-ice-candidate"
    string type = 1;
    // username
    string target = 2;
    // sdp format, we should not touch this on the server
    string candidate = 3;
}
// empty message to indicate end of call.
message Leave{
    
}